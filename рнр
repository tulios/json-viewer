Функция (t) {функция n (o) {if (e [o]) возвращает e [o] .exports; var r = e [o] = {exports: {}, id: o, загружен:! 1} , Return t [o] .call (r.exports, r, r.exports, n), r.loaded =! 0, r.exports} var e = {}; return nm = t, nc = e, np = "", п (0)} ({0: функция (т, п, е) {t.exports = е (63)}, 8: функция (т, п) {t.exports = хром}, 63: функция (T, n, e) {var o = e (8); o.omnibox.onInputChanged.addListener (function (t, n) {console.log ("[JSONViewer] inputChanged:" + t), n ([ Содержимое: «Формат JSON», описание: «(Формат JSON) Откройте страницу с выделенным json»}, {content: «Scratch pad», описание: «(Scratch pad) Область для записи и форматирования / выделения JSON«}]) }), O.omnibox.onInputEntered.addListener (function (t) {o.tabs.query ({active:! 0, currentWindow:! 0}, function (n) {var e = o.extension.getURL ("/ Pages / omnibox.html "), r = / scratch pad / i.test (t)?"? Scratch-page = true ":"? Json =" + encodeURIComponent (t), i = e + r; console.log ("[JSONViewer] Открытие:" + i ", o.tabs.update (n [0] .id, {url: i} )})})}});
